
Allocating common symbols
Common symbol       size              file

Cur_posx            0x4               main.o
map                 0x4               main.o
sched_marker        0x4               vmc.o
temp_map            0x80              main.o
gdt                 0x30              main.o
u_map               0x200             main.o
debug               0x4               main.o
gdtreg              0x6               main.o
IDT                 0x800             main.o
tss                 0x6c              main.o
cur_proc            0x4               vmc.o
k_mem               0x20000           main.o
debug_pmc           0x4               main.o
kernel_pdt          0x4               main.o
Cur_posy            0x4               main.o
cur_pid             0x4               vmc.o
idtr                0x6               main.o
flag_cur_proc       0x4               vmc.o
proc_table          0x230             vmc.o

Discarded input sections

 .note.GNU-stack
                0x00000000        0x0 main.o
 .note.GNU-stack
                0x00000000        0x0 printc.o
 .note.GNU-stack
                0x00000000        0x0 pmc.o
 .note.GNU-stack
                0x00000000        0x0 interrupt.o
 .note.GNU-stack
                0x00000000        0x0 vmc.o
 .note.GNU-stack
                0x00000000        0x0 userinit.o
 .note.GNU-stack
                0x00000000        0x0 proc.o
 .note.GNU-stack
                0x00000000        0x0 sys_call.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .text set to 0x100000
                0x00100000                . = 0x100000

.text           0x00100000     0x1261
 //*(EXCLUDE_FILE(file2.o file1.o) .data*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00100000       0x23 main.o
                0x00100000                main
 *fill*         0x00100023        0xd 00
 .text          0x00100030       0x85 prints.o
                0x00100030                print_char
                0x0010004c                clr_screen
                0x00100060                set_cursor
                0x00100086                scroll
 *fill*         0x001000b5        0xb 00
 .text          0x001000c0      0x134 printc.o
                0x001000c0                print_char_c
                0x00100160                print_num
                0x001001c0                print_str_c
 *fill*         0x001001f4        0xc 00
 .text          0x00100200      0x2b1 pmc.o
                0x00100200                zero_page
                0x00100220                kfree
                0x00100250                free_page
                0x00100290                mem_test
                0x001002b0                mem_init
                0x001002e0                alloc_page
                0x00100350                test_umem
                0x001003b0                kalloc
                0x00100410                test_kmem
 *fill*         0x001004b1        0xf 00
 .text          0x001004c0       0x16 pmcs.o
                0x001004c0                find_free
 *fill*         0x001004d6        0xa 00
 .text          0x001004e0      0x18b interrupt.o
                0x001004e0                Install_Id
                0x00100540                Init_IDT
                0x00100590                install_sys_call
                0x001005c0                default_handler
                0x001005e0                Init_Idtr
                0x00100620                Init_intr
 *fill*         0x0010066b        0x5 00
 .text          0x00100670       0x67 interrupts.o
                0x00100670                set_8259a
                0x00100693                Load_Idtr
                0x0010069c                Enable_Int
                0x0010069e                set_8253
                0x001006b0                send_eoi
                0x001006b9                int_handler
                0x001006c7                sys_call_s
                0x001006cf                run
 *fill*         0x001006d7        0x9 00
 .text          0x001006e0      0x4e2 vmc.o
                0x001006e0                set_frame
                0x001006f0                free_slot
                0x00100730                drop_temporary_map
                0x00100780                set_gdt_descriptor
                0x001007d0                setup_tss
                0x001007e0                init_tss
                0x00100830                init_gdt
                0x00100950                Set_Identity_Map
                0x001009d0                Init_Vmc
                0x00100a10                find_free_slot
                0x00100a70                temporary_map
                0x00100af0                map_frame
                0x00100b70                set_kmap
 *fill*         0x00100bc2        0xe 00
 .text          0x00100bd0       0x3c vmcs.o
                0x00100bd0                enable_paging
                0x00100be6                load_gdtr
                0x00100c04                load_tr
 *fill*         0x00100c0c        0x4 00
 .text          0x00100c10      0x154 userinit.o
                0x00100c10                str_cpy
                0x00100c40                copy_binary
                0x00100c70                switch_addr_space
                0x00100c80                setup_vm
                0x00100d00                user_init
 *fill*         0x00100d64        0xc 00
 .text          0x00100d70       0x25 userinits.o
                0x00100d70                goto_user
 *fill*         0x00100d95        0xb 00
 .text          0x00100da0      0x40f proc.o
                0x00100da0                alloc_proc
                0x00100e00                free_proc
                0x00100e20                getpid
                0x00100e30                find_ready
                0x00100eb0                copy_kstack
                0x00100ee0                copy_page
                0x00100f10                set_interrupt_stack
                0x00100f30                print_interrupt_stack
                0x00100f40                exec
                0x00100f50                copy_mem
                0x001010b0                fork
                0x00101180                switch_task
 *fill*         0x001011af        0x1 00
 .text          0x001011b0       0xab sys_call.o
                0x001011b0                get_parameter_str
                0x001011c0                set_return_parameter
                0x001011e0                sys_call
 *fill*         0x0010125b        0x5 00
 .text          0x00101260        0x1 sys_calls.o
                0x00101260                get_call_num
                0x00101261                PROVIDE (etext, .)

.iplt           0x00101270        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x00101264        0x0
 .rel.iplt      0x00000000        0x0 main.o
 .rel.text      0x00000000        0x0 main.o

.rodata
 *(.rodata .rodata.* .gnu.linkonce.r.*)

.stab           0x00101261        0x1
                0x00101261                PROVIDE (__STAB_BEGIN__, .)
 *(.stab)
                0x00101261                PROVIDE (__STAB_END__, .)
                0x00101261        0x1 BYTE 0x0

.stabstr        0x00101262        0x1
                0x00101262                PROVIDE (__STABSTR_BEGIN__, .)
 *(.stabstr)
                0x00101262                PROVIDE (__STABSTR_END__, .)
                0x00101262        0x1 BYTE 0x0
                0x00102000                . = ALIGN (0x1000)
                0x00102000                PROVIDE (data, .)

.data           0x00102000       0x37
 *(.data)
 .data          0x00102000        0x0 main.o
 .data          0x00102000        0x0 printc.o
 .data          0x00102000        0x0 pmc.o
 .data          0x00102000        0x0 interrupt.o
 .data          0x00102000        0x0 vmc.o
 .data          0x00102000        0x0 userinit.o
 .data          0x00102000        0x0 proc.o
 .data          0x00102000        0x0 sys_call.o
 .data          0x00102000       0x37 fp
                0x00102000                _binary_fp_start
                0x00102037                _binary_fp_end
                0x00102037                PROVIDE (edata, .)

.igot.plt       0x00102038        0x0
 .igot.plt      0x00000000        0x0 main.o

.bss            0x00103000    0x21270
 *(.bss)
 .bss           0x00103000        0x0 main.o
 .bss           0x00103000        0x0 printc.o
 .bss           0x00103000        0x0 pmc.o
 .bss           0x00103000        0x0 interrupt.o
 .bss           0x00103000        0x0 vmc.o
 .bss           0x00103000        0x0 userinit.o
 .bss           0x00103000        0x0 proc.o
 .bss           0x00103000        0x0 sys_call.o
 COMMON         0x00103000    0x21012 main.o
                0x00103000                Cur_posx
                0x00103004                map
                0x00103020                temp_map
                0x001030a0                gdt
                0x001030e0                u_map
                0x001032e0                debug
                0x001032e4                gdtreg
                0x00103300                IDT
                0x00103b00                tss
                0x00104000                k_mem
                0x00124000                debug_pmc
                0x00124004                kernel_pdt
                0x00124008                Cur_posy
                0x0012400c                idtr
 *fill*         0x00124012        0xe 00
 COMMON         0x00124020      0x250 vmc.o
                0x00124020                sched_marker
                0x00124024                cur_proc
                0x00124028                cur_pid
                0x0012402c                flag_cur_proc
                0x00124040                proc_table
                0x00124270                PROVIDE (end, .)

/DISCARD/
 *(.eh_frame .note.GNU-stack)
LOAD main.o
LOAD prints.o
LOAD printc.o
LOAD pmc.o
LOAD pmcs.o
LOAD interrupt.o
LOAD interrupts.o
LOAD vmc.o
LOAD vmcs.o
LOAD userinit.o
LOAD userinits.o
LOAD proc.o
LOAD sys_call.o
LOAD sys_calls.o
TARGET(binary)
LOAD fp
OUTPUT(kernel elf32-i386)

.comment        0x00000000       0x23
 .comment       0x00000000       0x23 main.o
                                 0x24 (size before relaxing)
 .comment       0x00000000       0x24 printc.o
 .comment       0x00000000       0x24 pmc.o
 .comment       0x00000000       0x24 interrupt.o
 .comment       0x00000000       0x24 vmc.o
 .comment       0x00000000       0x24 userinit.o
 .comment       0x00000000       0x24 proc.o
 .comment       0x00000000       0x24 sys_call.o
